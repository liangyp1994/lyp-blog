import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as a,a as i}from"./app-BEhkVDlh.js";const s={},o=i('<blockquote><p>在过去的很长时间我都只会使用Mybatis，了解了如何使用这个框架，会用它进行代码开发而已，但其实远远不够的。</p></blockquote><h2 id="为什么需要缓存" tabindex="-1"><a class="header-anchor" href="#为什么需要缓存"><span>为什么需要缓存</span></a></h2><p>缓存通常是为了方便访问更加快速，减少底层的压力而存在的。那么在Mybatis这样一个ORM框架中，它的底层是数据库，所以及时不学习看到标题应该也能推测出它缓存的就是我们通过sql查到的数据库里面的数据。</p><h2 id="一级缓存" tabindex="-1"><a class="header-anchor" href="#一级缓存"><span>一级缓存</span></a></h2><p>同一个SqlSession两次执行相同的sql，前一次查询的结果会放到缓存中，第二次就会从内存中获取。当一个SqlSession关闭了 其一级缓存也就会丢失，这是Mybatis默认的缓存机制。SqlSession中执行了任何一个update（修改）、delete（删除）、insert（新增）操作，都会清空<code>PerpetualCache</code>对象中的数据，但是SqlSession对象仍然可用。</p><h2 id="二级缓存" tabindex="-1"><a class="header-anchor" href="#二级缓存"><span>二级缓存</span></a></h2><p>二级缓存是多个SqlSession共享的。 作用域是同一个namespace，需要手动开启。</p><blockquote><p>二级缓存相比之下力度更大，它能跨会话 单机环境下 使用二级缓存可以避免不同会话写操作导致的脏数据 分布式环境下 即使使用二级缓存可以跨会话，但还是会出现脏数据，无法避免</p></blockquote><h2 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展"><span>扩展</span></a></h2><p>如果在分布式环境下想要降低数据库压力，可以考虑使用一些缓存中间件来实现。<strong>分布式缓存</strong>也是后续的一门课程。</p>',10),n=[o];function l(r,c){return a(),t("div",null,n)}const h=e(s,[["render",l],["__file","Cache-Of-Mybatis.html.vue"]]),m=JSON.parse('{"path":"/article/developer/backend/Cache-Of-Mybatis.html","title":"了解Mybatis中的缓存机制","lang":"zh-CN","frontmatter":{"title":"了解Mybatis中的缓存机制","date":"2024-05-27T00:00:00.000Z","description":"在过去的很长时间我都只会使用Mybatis，了解了如何使用这个框架，会用它进行代码开发而已，但其实远远不够的。 为什么需要缓存 缓存通常是为了方便访问更加快速，减少底层的压力而存在的。那么在Mybatis这样一个ORM框架中，它的底层是数据库，所以及时不学习看到标题应该也能推测出它缓存的就是我们通过sql查到的数据库里面的数据。 一级缓存 同一个Sql...","head":[["meta",{"property":"og:url","content":"https://lianyp.fun/lyp-blog/article/developer/backend/Cache-Of-Mybatis.html"}],["meta",{"property":"og:site_name","content":"小道空间-Vuepress开源轻博客系统"}],["meta",{"property":"og:title","content":"了解Mybatis中的缓存机制"}],["meta",{"property":"og:description","content":"在过去的很长时间我都只会使用Mybatis，了解了如何使用这个框架，会用它进行代码开发而已，但其实远远不够的。 为什么需要缓存 缓存通常是为了方便访问更加快速，减少底层的压力而存在的。那么在Mybatis这样一个ORM框架中，它的底层是数据库，所以及时不学习看到标题应该也能推测出它缓存的就是我们通过sql查到的数据库里面的数据。 一级缓存 同一个Sql..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T10:04:25.000Z"}],["meta",{"property":"article:author","content":"梁小道"}],["meta",{"property":"article:published_time","content":"2024-05-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-27T10:04:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"了解Mybatis中的缓存机制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-27T10:04:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"梁小道\\",\\"url\\":\\"https://lianyp.fun\\"}]}"]]},"headers":[{"level":2,"title":"为什么需要缓存","slug":"为什么需要缓存","link":"#为什么需要缓存","children":[]},{"level":2,"title":"一级缓存","slug":"一级缓存","link":"#一级缓存","children":[]},{"level":2,"title":"二级缓存","slug":"二级缓存","link":"#二级缓存","children":[]},{"level":2,"title":"扩展","slug":"扩展","link":"#扩展","children":[]}],"git":{"createdTime":1716804265000,"updatedTime":1716804265000,"contributors":[{"name":"liangyp","email":"2267841523@qq.com","commits":1}]},"readingTime":{"minutes":1.39,"words":416},"filePathRelative":"article/developer/backend/Cache-Of-Mybatis.md","localizedDate":"2024年5月27日","excerpt":"<blockquote>\\n<p>在过去的很长时间我都只会使用Mybatis，了解了如何使用这个框架，会用它进行代码开发而已，但其实远远不够的。</p>\\n</blockquote>\\n<h2>为什么需要缓存</h2>\\n<p>缓存通常是为了方便访问更加快速，减少底层的压力而存在的。那么在Mybatis这样一个ORM框架中，它的底层是数据库，所以及时不学习看到标题应该也能推测出它缓存的就是我们通过sql查到的数据库里面的数据。</p>\\n<h2>一级缓存</h2>\\n<p>同一个SqlSession两次执行相同的sql，前一次查询的结果会放到缓存中，第二次就会从内存中获取。当一个SqlSession关闭了 其一级缓存也就会丢失，这是Mybatis默认的缓存机制。SqlSession中执行了任何一个update（修改）、delete（删除）、insert（新增）操作，都会清空<code>PerpetualCache</code>对象中的数据，但是SqlSession对象仍然可用。</p>","autoDesc":true}');export{h as comp,m as data};
