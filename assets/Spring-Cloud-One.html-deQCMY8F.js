import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as n,a as o}from"./app-Co8UXNfU.js";const p={},r=o('<p>Spring Cloud是Spring团队对于微服务提供的一套解决方案，除了单体应用在使用的Spring Boot框架之外，还提供了诸如 网关，服务注册管理，配置中心之类的功能。</p><h2 id="模块组成" tabindex="-1"><a class="header-anchor" href="#模块组成"><span>模块组成</span></a></h2><p>对于微服务而言，设计很重要。我们需要站在全局的角度去分析为了实现当前的产品，如何合理的将整个产品划分为多个不同的模块，从而在保证服务化的同时兼顾代码的复用性。</p><h2 id="代码构成" tabindex="-1"><a class="header-anchor" href="#代码构成"><span>代码构成</span></a></h2><p>因为微服务中每一个服务都会是一个独立的进程，可以单独部署，所以服务之间无法直接进行本地方法调用，而需要使用 像 <code>OpenFeign</code> 这样的远程调用组件。对于Java这样的强类型语言来说，最好就需要有一个公共的代码模块用于存储请求参数，响应结果这些DTO，以此减少代码的CV。</p><ul><li><p>公共代码模块</p></li><li><p>业务模块：不同的业务模块提供某一部分的服务，需要有比较清晰的服务边界</p></li><li><p>UI模块：当前模块是前后端交互所需的必要模块</p></li></ul>',6),i=[r];function a(l,c){return n(),t("div",null,i)}const m=e(p,[["render",a],["__file","Spring-Cloud-One.html.vue"]]),g=JSON.parse('{"path":"/article/developer/backend/Spring-Cloud-One.html","title":"Spring Cloud 入门第一课","lang":"zh-CN","frontmatter":{"title":"Spring Cloud 入门第一课","date":"2024-05-30T00:00:00.000Z","description":"Spring Cloud是Spring团队对于微服务提供的一套解决方案，除了单体应用在使用的Spring Boot框架之外，还提供了诸如 网关，服务注册管理，配置中心之类的功能。 模块组成 对于微服务而言，设计很重要。我们需要站在全局的角度去分析为了实现当前的产品，如何合理的将整个产品划分为多个不同的模块，从而在保证服务化的同时兼顾代码的复用性。 代码...","head":[["meta",{"property":"og:url","content":"https://lianyp.fun/lyp-blog/article/developer/backend/Spring-Cloud-One.html"}],["meta",{"property":"og:site_name","content":"小道空间-Vuepress开源轻博客系统"}],["meta",{"property":"og:title","content":"Spring Cloud 入门第一课"}],["meta",{"property":"og:description","content":"Spring Cloud是Spring团队对于微服务提供的一套解决方案，除了单体应用在使用的Spring Boot框架之外，还提供了诸如 网关，服务注册管理，配置中心之类的功能。 模块组成 对于微服务而言，设计很重要。我们需要站在全局的角度去分析为了实现当前的产品，如何合理的将整个产品划分为多个不同的模块，从而在保证服务化的同时兼顾代码的复用性。 代码..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-30T09:15:37.000Z"}],["meta",{"property":"article:author","content":"梁小道"}],["meta",{"property":"article:published_time","content":"2024-05-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-30T09:15:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring Cloud 入门第一课\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-30T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-30T09:15:37.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"梁小道\\",\\"url\\":\\"https://lianyp.fun\\"}]}"]]},"headers":[{"level":2,"title":"模块组成","slug":"模块组成","link":"#模块组成","children":[]},{"level":2,"title":"代码构成","slug":"代码构成","link":"#代码构成","children":[]}],"git":{"createdTime":1717060537000,"updatedTime":1717060537000,"contributors":[{"name":"liangyp","email":"2267841523@qq.com","commits":1}]},"readingTime":{"minutes":1.08,"words":323},"filePathRelative":"article/developer/backend/Spring-Cloud-One.md","localizedDate":"2024年5月30日","excerpt":"<p>Spring Cloud是Spring团队对于微服务提供的一套解决方案，除了单体应用在使用的Spring Boot框架之外，还提供了诸如 网关，服务注册管理，配置中心之类的功能。</p>\\n<h2>模块组成</h2>\\n<p>对于微服务而言，设计很重要。我们需要站在全局的角度去分析为了实现当前的产品，如何合理的将整个产品划分为多个不同的模块，从而在保证服务化的同时兼顾代码的复用性。</p>\\n<h2>代码构成</h2>\\n<p>因为微服务中每一个服务都会是一个独立的进程，可以单独部署，所以服务之间无法直接进行本地方法调用，而需要使用 像 <code>OpenFeign</code> 这样的远程调用组件。对于Java这样的强类型语言来说，最好就需要有一个公共的代码模块用于存储请求参数，响应结果这些DTO，以此减少代码的CV。</p>","autoDesc":true}');export{m as comp,g as data};
