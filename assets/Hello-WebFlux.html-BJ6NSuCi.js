import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as a,a as n}from"./app-BEhkVDlh.js";const s={},l=n(`<h2 id="什么是webflux" tabindex="-1"><a class="header-anchor" href="#什么是webflux"><span>什么是WebFlux</span></a></h2><p>异步非阻塞的WEB框架，对比之前的SpringMvc Mvc 构建于Servlet API,使用的是同步阻塞式 I/O 模型(一个线程处理一个请求)，而WebFlux是异步IO，减少等待时间，线程可以被更好的利用，一个线程可以处理多个任务，不再是一对一</p><h2 id="flowapi" tabindex="-1"><a class="header-anchor" href="#flowapi"><span>FlowAPI</span></a></h2><p>JDK9给出了一个标准reactive stream 叫FlowAPI.</p><p>Subscription 接口定义了连接发布者和订阅者的方法,主要的作用是为发布者和订阅者建立关系.</p><p>request：订阅者调用此方法请求数据；</p><p>cancel：订阅者调用这个方法来取消订阅，解除订阅者与发布者之间的关系。</p><p>Publisher 接口定义了发布者的方法；</p><p>数据的输出</p><p>Subscriber 接口定义了订阅者的方法；</p><p>可以说是事件发生的源头，无非就是请求，接受返回数据，按流程办事。</p><p>Processor&lt;T,R&gt; 接口定义了处理器；</p><p>处理器同时是订阅者和发布者，接口的定义也是继承了两者</p><p>背压</p><p>就是Subscriber告诉Publisher我要多少数据你给我发过来</p><h2 id="reactor" tabindex="-1"><a class="header-anchor" href="#reactor"><span>Reactor</span></a></h2><p>Reactor是一个响应式流，它也有对应的发布者(Publisher )，Reactor的发布者用两个类来表示：</p><p>Mono(返回0或1个元素)</p><p>Flux(返回0-n个元素)</p><p>~~后面再补充其他几个概念</p><h2 id="使用-webflux" tabindex="-1"><a class="header-anchor" href="#使用-webflux"><span>使用 WebFlux</span></a></h2><p>添加依赖</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-webflux<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,23),p=[l];function o(r,c){return a(),t("div",null,p)}const d=e(s,[["render",o],["__file","Hello-WebFlux.html.vue"]]),b=JSON.parse('{"path":"/article/developer/backend/Hello-WebFlux.html","title":"认识了解 WebFlux","lang":"zh-CN","frontmatter":{"title":"认识了解 WebFlux","date":"2024-05-31T00:00:00.000Z","categories":"后端","tags":["WebFlux"],"description":"什么是WebFlux 异步非阻塞的WEB框架，对比之前的SpringMvc Mvc 构建于Servlet API,使用的是同步阻塞式 I/O 模型(一个线程处理一个请求)，而WebFlux是异步IO，减少等待时间，线程可以被更好的利用，一个线程可以处理多个任务，不再是一对一 FlowAPI JDK9给出了一个标准reactive stream 叫Flo...","head":[["meta",{"property":"og:url","content":"https://lianyp.fun/lyp-blog/article/developer/backend/Hello-WebFlux.html"}],["meta",{"property":"og:site_name","content":"小道空间-Vuepress开源轻博客系统"}],["meta",{"property":"og:title","content":"认识了解 WebFlux"}],["meta",{"property":"og:description","content":"什么是WebFlux 异步非阻塞的WEB框架，对比之前的SpringMvc Mvc 构建于Servlet API,使用的是同步阻塞式 I/O 模型(一个线程处理一个请求)，而WebFlux是异步IO，减少等待时间，线程可以被更好的利用，一个线程可以处理多个任务，不再是一对一 FlowAPI JDK9给出了一个标准reactive stream 叫Flo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-31T09:13:50.000Z"}],["meta",{"property":"article:author","content":"梁小道"}],["meta",{"property":"article:tag","content":"WebFlux"}],["meta",{"property":"article:published_time","content":"2024-05-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-31T09:13:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"认识了解 WebFlux\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-31T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-31T09:13:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"梁小道\\",\\"url\\":\\"https://lianyp.fun\\"}]}"]]},"headers":[{"level":2,"title":"什么是WebFlux","slug":"什么是webflux","link":"#什么是webflux","children":[]},{"level":2,"title":"FlowAPI","slug":"flowapi","link":"#flowapi","children":[]},{"level":2,"title":"Reactor","slug":"reactor","link":"#reactor","children":[]},{"level":2,"title":"使用 WebFlux","slug":"使用-webflux","link":"#使用-webflux","children":[]}],"git":{"createdTime":1717146830000,"updatedTime":1717146830000,"contributors":[{"name":"liangyp","email":"2267841523@qq.com","commits":1}]},"readingTime":{"minutes":1.28,"words":385},"filePathRelative":"article/developer/backend/Hello-WebFlux.md","localizedDate":"2024年5月31日","excerpt":"<h2>什么是WebFlux</h2>\\n<p>异步非阻塞的WEB框架，对比之前的SpringMvc\\nMvc 构建于Servlet API,使用的是同步阻塞式 I/O 模型(一个线程处理一个请求)，而WebFlux是异步IO，减少等待时间，线程可以被更好的利用，一个线程可以处理多个任务，不再是一对一</p>\\n<h2>FlowAPI</h2>\\n<p>JDK9给出了一个标准reactive stream 叫FlowAPI.</p>\\n<p>Subscription 接口定义了连接发布者和订阅者的方法,主要的作用是为发布者和订阅者建立关系.</p>\\n<p>request：订阅者调用此方法请求数据；</p>","autoDesc":true}');export{d as comp,b as data};
