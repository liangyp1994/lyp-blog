import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as s,a as t}from"./app-DheXtV5N.js";const e={},o=t(`<blockquote><p>在 Java 中，字符串是一种表示文本数据的数据类型，它是不可变的，也就是说一旦被创建，就无法改变其内容。Java 中的字符串是通过 <code>java.lang.String</code> 类来表示和操作的。</p></blockquote><h2 id="字符串的创建和初始化" tabindex="-1"><a class="header-anchor" href="#字符串的创建和初始化"><span>字符串的创建和初始化</span></a></h2><p>在 Java 中，可以使用双引号来创建字符串字面量，也可以使用 <code>new</code> 关键字来创建一个字符串对象：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 使用双引号创建字符串字面量</span>
<span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用 new 关键字创建字符串对象</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串的拼接" tabindex="-1"><a class="header-anchor" href="#字符串的拼接"><span>字符串的拼接</span></a></h2><p>可以使用加号 <code>+</code> 或者 <code>concat</code> 方法来拼接字符串：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> firstName <span class="token operator">=</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> lastName <span class="token operator">=</span> <span class="token string">&quot;Doe&quot;</span><span class="token punctuation">;</span>

<span class="token class-name">String</span> fullName <span class="token operator">=</span> firstName <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> lastName<span class="token punctuation">;</span> <span class="token comment">// 使用加号拼接字符串</span>
<span class="token comment">// 或者使用 concat 方法</span>
<span class="token class-name">String</span> fullName <span class="token operator">=</span> firstName<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>lastName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串的比较" tabindex="-1"><a class="header-anchor" href="#字符串的比较"><span>字符串的比较</span></a></h2><p>可以使用 <code>equals</code> 方法来比较两个字符串是否相等，也可以使用 <code>compareTo</code> 方法来比较字符串的大小：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str1 <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> str2 <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">boolean</span> isEqual <span class="token operator">=</span> str1<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 会返回 false，因为字符串比较是区分大小写的</span>
<span class="token keyword">int</span> result <span class="token operator">=</span> str1<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 会返回一个正数，因为 &#39;h&#39; 的 ASCII 值是大于 &#39;H&#39; 的</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串的查找和替换" tabindex="-1"><a class="header-anchor" href="#字符串的查找和替换"><span>字符串的查找和替换</span></a></h2><p>可以使用 <code>indexOf</code>、<code>lastIndexOf</code> 方法来查找子串在字符串中的位置，也可以使用 <code>replace</code> 方法来替换字符串中的内容：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;Java is a powerful language&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> index <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;is&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回字符串 &quot;is&quot; 在原字符串中的位置，这里为 5</span>
<span class="token class-name">String</span> newStr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;Java&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Python&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 返回一个新字符串，将 &quot;Java&quot; 替换为 &quot;Python&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串的切割和连接" tabindex="-1"><a class="header-anchor" href="#字符串的切割和连接"><span>字符串的切割和连接</span></a></h2><p>可以使用 <code>split</code> 方法把字符串分割成子串，也可以使用 <code>join</code> 方法来连结字符串数组为一个字符串：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;apple,banana,orange&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fruits <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 把字符串按逗号分割成子串</span>
<span class="token class-name">String</span> joinedString <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> fruits<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 将字符串数组 fruits 连接为一个字符串，各元素之间用 &quot;-&quot; 分隔</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串的长度和获取字符" tabindex="-1"><a class="header-anchor" href="#字符串的长度和获取字符"><span>字符串的长度和获取字符</span></a></h2><p>可以使用 <code>length</code> 属性来获取字符串的长度，使用 <code>charAt</code> 方法来获取字符串中的字符：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> length <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取字符串的长度，这里为 5</span>
<span class="token keyword">char</span> firstChar <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取字符串的第一个字符，这里为 &#39;H&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),p=[o];function c(l,i){return s(),n("div",null,p)}const d=a(e,[["render",c],["__file","Hello-String.html.vue"]]),k=JSON.parse('{"path":"/java/Java-Guide/Hello-String.html","title":"Java中的字符串","lang":"zh-CN","frontmatter":{"title":"Java中的字符串","article":false,"order":2,"description":"在 Java 中，字符串是一种表示文本数据的数据类型，它是不可变的，也就是说一旦被创建，就无法改变其内容。Java 中的字符串是通过 `java.lang.String` 类来表示和操作的。","head":[["meta",{"property":"og:url","content":"https://lianyp.fun/java/Java-Guide/Hello-String.html"}],["meta",{"property":"og:site_name","content":"小道空间-Vuepress开源轻博客系统"}],["meta",{"property":"og:title","content":"Java中的字符串"}],["meta",{"property":"og:description","content":"在 Java 中，字符串是一种表示文本数据的数据类型，它是不可变的，也就是说一旦被创建，就无法改变其内容。Java 中的字符串是通过 `java.lang.String` 类来表示和操作的。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-25T01:28:19.000Z"}],["meta",{"property":"article:author","content":"梁小道"}],["meta",{"property":"article:modified_time","content":"2024-05-25T01:28:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Java中的字符串\\",\\"description\\":\\"在 Java 中，字符串是一种表示文本数据的数据类型，它是不可变的，也就是说一旦被创建，就无法改变其内容。Java 中的字符串是通过 `java.lang.String` 类来表示和操作的。\\"}"]]},"headers":[{"level":2,"title":"字符串的创建和初始化","slug":"字符串的创建和初始化","link":"#字符串的创建和初始化","children":[]},{"level":2,"title":"字符串的拼接","slug":"字符串的拼接","link":"#字符串的拼接","children":[]},{"level":2,"title":"字符串的比较","slug":"字符串的比较","link":"#字符串的比较","children":[]},{"level":2,"title":"字符串的查找和替换","slug":"字符串的查找和替换","link":"#字符串的查找和替换","children":[]},{"level":2,"title":"字符串的切割和连接","slug":"字符串的切割和连接","link":"#字符串的切割和连接","children":[]},{"level":2,"title":"字符串的长度和获取字符","slug":"字符串的长度和获取字符","link":"#字符串的长度和获取字符","children":[]}],"git":{"createdTime":1716535397000,"updatedTime":1716600499000,"contributors":[{"name":"liangyp","email":"2267841523@qq.com","commits":2}]},"readingTime":{"minutes":2.17,"words":652},"filePathRelative":"java/Java-Guide/Hello-String.md","localizedDate":"2024年5月24日","excerpt":"<blockquote>\\n<p>在 Java 中，字符串是一种表示文本数据的数据类型，它是不可变的，也就是说一旦被创建，就无法改变其内容。Java 中的字符串是通过 <code>java.lang.String</code> 类来表示和操作的。</p>\\n</blockquote>\\n<h2>字符串的创建和初始化</h2>\\n<p>在 Java 中，可以使用双引号来创建字符串字面量，也可以使用 <code>new</code> 关键字来创建一个字符串对象：</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">String</span> str1 <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"Hello, World!\\"</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 使用双引号创建字符串字面量</span>\\n<span class=\\"token class-name\\">String</span> str2 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hello, World!\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 使用 new 关键字创建字符串对象</span>\\n</code></pre></div>"}');export{d as comp,k as data};
