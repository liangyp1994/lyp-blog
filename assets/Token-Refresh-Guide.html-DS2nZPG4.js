import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,a as t}from"./app-DheXtV5N.js";const p={},e=t(`<h2 id="什么是token" tabindex="-1"><a class="header-anchor" href="#什么是token"><span>什么是Token</span></a></h2><p>中文名为令牌，通常是client-server架构下client要访问server资源而要求携带的一个令牌，该令牌一方面是为了安全，另外则是可以让服务端知道当前访问的主体（通俗一点讲就是用户）。</p><h2 id="修改登陆响应字段" tabindex="-1"><a class="header-anchor" href="#修改登陆响应字段"><span>修改登陆响应字段</span></a></h2><p>字段：登陆完成后系统将颁发token作为接口访问的令牌，而如果要进行续签功能，则在原有基础上添加刷新令牌字段，该字段将进行刷新令牌的操作。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>liangyp<span class="token punctuation">.</span>king<span class="token punctuation">.</span>system<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span>vo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">AllArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">NoArgsConstructor</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> : liangyp
 * <span class="token keyword">@since</span> 2024-2-21 16:22
 */</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TokenResult</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 令牌
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> accessToken<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 令牌时长(分钟)
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> expireMinutes<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 刷新令牌
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> refreshToken<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在原有字段基础上我们添加一个字段</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 刷新令牌
 */</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> refreshToken<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="前后端交互" tabindex="-1"><a class="header-anchor" href="#前后端交互"><span>前后端交互</span></a></h2><p>用户输入账号密码进行登陆操作 -&gt; 调用后端登陆接口 -&gt; 后端返回响应字段如上所示 令牌，过期时间，刷新令牌 -&gt; 前端将字段保存到本地 -&gt; 前端后续每次请求接口将会携带 accessToken -&gt; 开启定时执行器：每隔一段时间（过期时间的一半）调用一次刷新令牌接口</p><blockquote><p>注意点：前端每次调用刷新令牌接口都需要保证当前用户处于登陆状态下，后端在令牌刷新过程中上一个令牌要保持可用状态</p></blockquote><h3 id="前端代码" tabindex="-1"><a class="header-anchor" href="#前端代码"><span>前端代码</span></a></h3><p>前端登陆以及刷新令牌逻辑</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">passwordLogin</span><span class="token punctuation">(</span><span class="token parameter">loginData</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">loginApi</span><span class="token punctuation">(</span>loginData<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> refreshToken<span class="token punctuation">,</span> accessToken<span class="token punctuation">,</span> expireMinutes <span class="token punctuation">}</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>data
        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;admin-token&#39;</span><span class="token punctuation">,</span> accessToken<span class="token punctuation">)</span>
        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;refresh-token&#39;</span><span class="token punctuation">,</span> refreshToken<span class="token punctuation">)</span>
        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;expire&#39;</span><span class="token punctuation">,</span> expireMinutes<span class="token punctuation">)</span>
        <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token comment">// 请求刷新令牌的接口</span>
          <span class="token function">refreshTokenApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> <span class="token punctuation">{</span> refreshToken<span class="token punctuation">,</span> accessToken<span class="token punctuation">,</span> expireMinutes <span class="token punctuation">}</span> <span class="token operator">=</span>
              response<span class="token punctuation">.</span>data
            localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;admin-token&#39;</span><span class="token punctuation">,</span> accessToken<span class="token punctuation">)</span>
            localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;refresh-token&#39;</span><span class="token punctuation">,</span> refreshToken<span class="token punctuation">)</span>
            localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;expire&#39;</span><span class="token punctuation">,</span> expireMinutes<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> expireMinutes <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码涉及到两个接口 分别是密码登陆和刷新令牌</p><h3 id="后端代码" tabindex="-1"><a class="header-anchor" href="#后端代码"><span>后端代码</span></a></h3><p>创建令牌逻辑如下，主要是保证了刷新令牌要比授权令牌时效更长，这里设置为授权令牌的两倍</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Integer</span> <span class="token constant">ACCESS_EXPIRES_MILLISECONDS</span> <span class="token operator">=</span> <span class="token number">1800000</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Integer</span> <span class="token constant">REFRESH_EXPIRES_MILLISECONDS</span> <span class="token operator">=</span> <span class="token number">3600000</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">createToken</span><span class="token punctuation">(</span><span class="token class-name">SysUser</span> sysUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 当前时间</span>
    <span class="token class-name">DateTime</span> now <span class="token operator">=</span> <span class="token class-name">DateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 推后30分钟</span>
    <span class="token class-name">DateTime</span> newTime <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">offsetNew</span><span class="token punctuation">(</span><span class="token class-name">DateField</span><span class="token punctuation">.</span><span class="token constant">MILLISECOND</span><span class="token punctuation">,</span> <span class="token constant">ACCESS_EXPIRES_MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> payloads <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    payloads<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">USERNAME</span><span class="token punctuation">,</span> sysUser<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    payloads<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">USERID</span><span class="token punctuation">,</span> sysUser<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//签发时间</span>
    payloads<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">JWTPayload</span><span class="token punctuation">.</span><span class="token constant">ISSUED_AT</span><span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//过期时间</span>
    payloads<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">JWTPayload</span><span class="token punctuation">.</span><span class="token constant">EXPIRES_AT</span><span class="token punctuation">,</span> newTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//生效时间</span>
    payloads<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">JWTPayload</span><span class="token punctuation">.</span><span class="token constant">NOT_BEFORE</span><span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">JWTUtil</span><span class="token punctuation">.</span><span class="token function">createToken</span><span class="token punctuation">(</span>payloads<span class="token punctuation">,</span> <span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">CRYPOTJS_KEY</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">createRefreshToken</span><span class="token punctuation">(</span><span class="token class-name">SysUser</span> sysUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 当前时间</span>
    <span class="token class-name">DateTime</span> now <span class="token operator">=</span> <span class="token class-name">DateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 推后30分钟</span>
    <span class="token class-name">DateTime</span> newTime <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">offsetNew</span><span class="token punctuation">(</span><span class="token class-name">DateField</span><span class="token punctuation">.</span><span class="token constant">MINUTE</span><span class="token punctuation">,</span> <span class="token constant">REFRESH_EXPIRES_MILLISECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> payloads <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    payloads<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">USERNAME</span><span class="token punctuation">,</span> sysUser<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    payloads<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">USERID</span><span class="token punctuation">,</span> sysUser<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//签发时间</span>
    payloads<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">JWTPayload</span><span class="token punctuation">.</span><span class="token constant">ISSUED_AT</span><span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//过期时间</span>
    payloads<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">JWTPayload</span><span class="token punctuation">.</span><span class="token constant">EXPIRES_AT</span><span class="token punctuation">,</span> newTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//生效时间</span>
    payloads<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">JWTPayload</span><span class="token punctuation">.</span><span class="token constant">NOT_BEFORE</span><span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token class-name">JWTUtil</span><span class="token punctuation">.</span><span class="token function">createToken</span><span class="token punctuation">(</span>payloads<span class="token punctuation">,</span> <span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">CRYPOTJS_KEY</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>刷新令牌接口的话，是需要当前用户已认证登录方可生成令牌并响应。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>上面介绍完了前后端大体的交互代码，可以分析一下可能发生或已经的问题以及如何处理的解决方案</p><ol><li>用户无法获取</li></ol><p>在使用过程中，因为用户信息是保存在redis中并且是有失效时长的，所以在根据账号查询用户的逻辑里面应该补充当无法获取即立刻通过数据库查询重新赋值。</p>`,22),o=[e];function c(l,i){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","Token-Refresh-Guide.html.vue"]]),d=JSON.parse('{"path":"/article/others/Token-Refresh-Guide.html","title":"Token令牌-如何进行用户令牌的刷新操作","lang":"zh-CN","frontmatter":{"title":"Token令牌-如何进行用户令牌的刷新操作","date":"2024-05-14T00:00:00.000Z","categories":"其他","description":"什么是Token 中文名为令牌，通常是client-server架构下client要访问server资源而要求携带的一个令牌，该令牌一方面是为了安全，另外则是可以让服务端知道当前访问的主体（通俗一点讲就是用户）。 修改登陆响应字段 字段：登陆完成后系统将颁发token作为接口访问的令牌，而如果要进行续签功能，则在原有基础上添加刷新令牌字段，该字段将进行...","head":[["meta",{"property":"og:url","content":"https://lianyp.fun/article/others/Token-Refresh-Guide.html"}],["meta",{"property":"og:site_name","content":"小道空间-Vuepress开源轻博客系统"}],["meta",{"property":"og:title","content":"Token令牌-如何进行用户令牌的刷新操作"}],["meta",{"property":"og:description","content":"什么是Token 中文名为令牌，通常是client-server架构下client要访问server资源而要求携带的一个令牌，该令牌一方面是为了安全，另外则是可以让服务端知道当前访问的主体（通俗一点讲就是用户）。 修改登陆响应字段 字段：登陆完成后系统将颁发token作为接口访问的令牌，而如果要进行续签功能，则在原有基础上添加刷新令牌字段，该字段将进行..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-25T01:28:19.000Z"}],["meta",{"property":"article:author","content":"梁小道"}],["meta",{"property":"article:published_time","content":"2024-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-25T01:28:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Token令牌-如何进行用户令牌的刷新操作\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-25T01:28:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"梁小道\\",\\"url\\":\\"https://lianyp.fun\\"}]}"]]},"headers":[{"level":2,"title":"什么是Token","slug":"什么是token","link":"#什么是token","children":[]},{"level":2,"title":"修改登陆响应字段","slug":"修改登陆响应字段","link":"#修改登陆响应字段","children":[]},{"level":2,"title":"前后端交互","slug":"前后端交互","link":"#前后端交互","children":[{"level":3,"title":"前端代码","slug":"前端代码","link":"#前端代码","children":[]},{"level":3,"title":"后端代码","slug":"后端代码","link":"#后端代码","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1716002958000,"updatedTime":1716600499000,"contributors":[{"name":"liangyp","email":"2267841523@qq.com","commits":2}]},"readingTime":{"minutes":2.81,"words":842},"filePathRelative":"article/others/Token-Refresh-Guide.md","localizedDate":"2024年5月14日","excerpt":"<h2>什么是Token</h2>\\n<p>中文名为令牌，通常是client-server架构下client要访问server资源而要求携带的一个令牌，该令牌一方面是为了安全，另外则是可以让服务端知道当前访问的主体（通俗一点讲就是用户）。</p>\\n<h2>修改登陆响应字段</h2>\\n<p>字段：登陆完成后系统将颁发token作为接口访问的令牌，而如果要进行续签功能，则在原有基础上添加刷新令牌字段，该字段将进行刷新令牌的操作。</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">package</span> <span class=\\"token namespace\\">com<span class=\\"token punctuation\\">.</span>liangyp<span class=\\"token punctuation\\">.</span>king<span class=\\"token punctuation\\">.</span>system<span class=\\"token punctuation\\">.</span>pojo<span class=\\"token punctuation\\">.</span>vo</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">lombok<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">AllArgsConstructor</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">lombok<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">Data</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">lombok<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">NoArgsConstructor</span></span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token doc-comment comment\\">/**\\n * <span class=\\"token keyword\\">@author</span> : liangyp\\n * <span class=\\"token keyword\\">@since</span> 2024-2-21 16:22\\n */</span>\\n<span class=\\"token annotation punctuation\\">@Data</span>\\n<span class=\\"token annotation punctuation\\">@NoArgsConstructor</span>\\n<span class=\\"token annotation punctuation\\">@AllArgsConstructor</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">TokenResult</span> <span class=\\"token punctuation\\">{</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 令牌\\n     */</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> accessToken<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 令牌时长(分钟)\\n     */</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">Integer</span> expireMinutes<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 刷新令牌\\n     */</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token class-name\\">String</span> refreshToken<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{r as comp,d as data};
