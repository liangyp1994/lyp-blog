import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o as n,a as l}from"./app-8-P6kUky.js";const a={},i=l('<h2 id="什么是controlnet" tabindex="-1"><a class="header-anchor" href="#什么是controlnet"><span>什么是Controlnet</span></a></h2><p>我们先想一下自己为什么要学习AI绘画，无非就是想要得到符合我们需要的图像。那么如何通过AI得到我们脑海中期待的画面呢？ 这时候就要了解Controlnet，中文名我们通常称为 “控制网络” ，通过它我们可以得到一些控制更为精准的图像。</p><blockquote><p>提示词是以文字的方式去告诉AI我要什么东西，而Lora则是在原有流程上进行了一定微调，具体调整方向以及力度由Lora模型和强度参数有关，本节要讲的Controlnet的作用则是更加精细化地控制输出，至于具体的作用跟选择的预处理器有关，预处理器也是与前面两者（提示词/Lora）的最大区别所在，由一定的学习成本。</p></blockquote><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>Controlnet的大致流程是 加载图像&gt;预处理器&gt;特征参数&gt;采样&gt;输出。它可以控制人物的姿势，对线稿进行上色，对画质进行增强，对图像风格进行转换 预处理器：选择不同的预处理器可以得到不同的特征参数，例如 人物姿势，图像深度，画面线稿 Controlnet模型：不同的预处理器分别要对应相符合的Controlnet模型。</p><h2 id="插件下载" tabindex="-1"><a class="header-anchor" href="#插件下载"><span>插件下载</span></a></h2><p><a href="https://github.com/Fannovel16/comfyui_controlnet_aux.git" target="_blank" rel="noopener noreferrer">https://github.com/Fannovel16/comfyui_controlnet_aux.git</a> 插件放置位置 ComfyUI\\custom_nodes\\comfyui_controlnet_aux</p><h2 id="模型下载" tabindex="-1"><a class="header-anchor" href="#模型下载"><span>模型下载</span></a></h2><p>模型放置位置 ComfyUI_windows_portable\\ComfyUI\\models\\controlnet</p><h2 id="节点介绍" tabindex="-1"><a class="header-anchor" href="#节点介绍"><span>节点介绍</span></a></h2><p>它可以引入更多的条件来让我们出图更加可控。</p><h3 id="预处理器" tabindex="-1"><a class="header-anchor" href="#预处理器"><span>预处理器</span></a></h3><p>线条、面部与姿态、法向与深度、语义分割、颜色、Tile平铺 将 “加载图片” “预处理器” “图片预览” 连接后可以看到预处理器的输出效果，后面我们会就各种预处理器的处理结果进行分析，根据分析我们更能够理解何时该使用哪种预处理器进行处理达到更好的控制出图效果。</p><h3 id="加载controlnet模型" tabindex="-1"><a class="header-anchor" href="#加载controlnet模型"><span>加载controlnet模型</span></a></h3><p>模型与预处理器是需要对应的，注意大模型的版本需要与controlnet模型进行适配。</p><h3 id="应用controlnet模型" tabindex="-1"><a class="header-anchor" href="#应用controlnet模型"><span>应用Controlnet模型</span></a></h3><p>该节点会 接收上面预处理器得到的图片壹基金加载的controlnet模型作为输入 然后可以调节 controlnet强度和开始 结束控制的时间，对于Controlnet高级应用节点我们还可以接收 正反向提示词。</p><h2 id="操作流程" tabindex="-1"><a class="header-anchor" href="#操作流程"><span>操作流程</span></a></h2><p>不管选择哪种Controlnet，大致的流程都是一样的，这里就以“Canny线稿”为例做一个介绍</p><ol><li>先使用文生图生成一张图片作为预处理器的原图</li><li>上一步得到的图片作为预处理器的输入图像，然后输出一个预览图</li><li>选择与预处理器一致的Controlnet模型进行使用然后输入给到采样器</li></ol><h2 id="controlnet分类" tabindex="-1"><a class="header-anchor" href="#controlnet分类"><span>Controlnet分类</span></a></h2><h3 id="控制姿势" tabindex="-1"><a class="header-anchor" href="#控制姿势"><span>控制姿势</span></a></h3><p>身体姿势（openpose ），表情（openpose_faceonly ），手指形态（openpose_hand ）三种都可以控制，具体取决于我们选择的预处理器和controlnet模型如何。可以上面单个的情况或组合</p><ul><li>身体控制</li><li>身体+手指控制</li><li>身体+表情控制</li><li>只有表情控制</li><li>身体+手指+表情控制</li></ul><p>都知道手脚是AI绘画中最容器出问题的地方，经常不小心就出现六指琴魔，这时控制手指形态就显得尤为可靠了。而表情则是更适合原图为大头照，人物头部特写图，注意如果使用了Lora微调人物面部的话，二者会有一定的冲突影响，可能发生混乱。</p><blockquote><p>如果姿势控制的火柴人不太准确该怎么办？</p></blockquote><h3 id="艺术线条" tabindex="-1"><a class="header-anchor" href="#艺术线条"><span>艺术线条</span></a></h3><ul><li>lineart</li></ul><p>lineart专门用于提取线稿 针对不同的类型会进行不同的处理</p><blockquote><p>动漫：lineart_anime 或 lineart_anime_denoise 素描:lineart_coarse 写实：lineart_realistic 黑白线稿：lineart_standard</p></blockquote><p>想要得到动漫照片要选择二次元的大模型，如果讲写实风格和动漫风格进行转换的话需要注意调整controlnet的强度，不能太高。黑白线稿我个人认为适合那种对颜色较为敏感的人。</p><ul><li>canny</li></ul><p>可以识别到画面最多的线条，更适合二次元照片</p><ul><li>softedge</li></ul><p>大致的轮廓细节，线条比较柔和，自由度更高。</p><ul><li>scribble</li></ul><p>涂鸦：说的就是它，随便画两笔就能出一张图</p><ul><li>mlsd</li></ul><p>只识别直线 适合做房屋设计</p><h3 id="空间深度" tabindex="-1"><a class="header-anchor" href="#空间深度"><span>空间深度</span></a></h3><p>整体的线条布局以及镜头前后分布情况 选择 depth</p><h3 id="物品种类" tabindex="-1"><a class="header-anchor" href="#物品种类"><span>物品种类</span></a></h3><p>seg 识别图片不一样的东西，就用不同的颜色表示</p><h3 id="风格约束" tabindex="-1"><a class="header-anchor" href="#风格约束"><span>风格约束</span></a></h3><ul><li><p>shuffle 将图片颜色混合融到新图里，可以将其他图片的画风转移到自己的照片上</p></li><li><p>reference 参考原图的风格或角色，比如让图片中的狗站立起来</p></li><li><p>normal 参考原图的光影和姿势，它会参考明暗关系以及人物的姿势</p></li><li><p>t2ia 还原原图的颜色，比较特殊的是不同的预处理器用的模型不一样， 它的主要功能有3个：</p></li></ul><ol><li>将原图的颜色模糊成马赛克再重新生成图片 预处理器：t2ia_color_grid 模型：t2iadapter_color</li><li>提取素描的线稿，生成真人照片（这个不好用，直接用lineart就行）</li><li>参考原图风格，生成相似风格的照片</li></ol><h3 id="重绘" tabindex="-1"><a class="header-anchor" href="#重绘"><span>重绘</span></a></h3><p>很多教程都有图生图的局部重绘介绍，而controlnet能让图片融合度更高。它可以用于消除图片信息或给人物换衣服，只是关键词不一样即可 预处理器：inpaint_global_harmonious 模型：inpaint</p><h3 id="添加细节-tile" tabindex="-1"><a class="header-anchor" href="#添加细节-tile"><span>添加细节-tile</span></a></h3><p>可以用来 恢复画质 预处理器：tile_resample 模型：tile tile模型的工作原理是先忽略掉照片的一些细节，再加上一些细节。 可以涂鸦 可以风格变换</p><h2 id="一些案例" tabindex="-1"><a class="header-anchor" href="#一些案例"><span>一些案例</span></a></h2><h2 id="line里面的canny" tabindex="-1"><a class="header-anchor" href="#line里面的canny"><span>Line里面的Canny</span></a></h2><figure><img src="https://lianyp.fun/picture/open-admin-pro/picture/article/image/84e41875-bedd-4446-af8e-c05ee2e3b8fd.png" alt="工作流程图" tabindex="0" loading="lazy"><figcaption>工作流程图</figcaption></figure><figure><img src="https://lianyp.fun/picture/open-admin-pro/picture/article/image/3173eca1-8d6a-41ad-a848-87d2b7daaaf6.png" alt="线图" tabindex="0" loading="lazy"><figcaption>线图</figcaption></figure><figure><img src="https://lianyp.fun/picture/open-admin-pro/picture/article/image/9aa72787-9375-460c-88c1-94049190494a.png" alt="生成图1" tabindex="0" loading="lazy"><figcaption>生成图1</figcaption></figure><figure><img src="https://lianyp.fun/picture/open-admin-pro/picture/article/image/b845164b-4d88-4c79-b8c4-07ef4a983523.png" alt="生成图2" tabindex="0" loading="lazy"><figcaption>生成图2</figcaption></figure>',56),o=[i];function r(p,c){return n(),t("div",null,o)}const d=e(a,[["render",r],["__file","ComfyUI_Controlnet.html.vue"]]),u=JSON.parse('{"path":"/article/ai/ComfyUI_Controlnet.html","title":"AI绘画-在ComfyUI中如何使用Controlnet","lang":"zh-CN","frontmatter":{"title":"AI绘画-在ComfyUI中如何使用Controlnet","date":"2024-05-03T00:00:00.000Z","categories":["AI绘画"],"tags":["ComfyUI","Controlnet"],"description":"什么是Controlnet 我们先想一下自己为什么要学习AI绘画，无非就是想要得到符合我们需要的图像。那么如何通过AI得到我们脑海中期待的画面呢？ 这时候就要了解Controlnet，中文名我们通常称为 “控制网络” ，通过它我们可以得到一些控制更为精准的图像。 提示词是以文字的方式去告诉AI我要什么东西，而Lora则是在原有流程上进行了一定微调，具体...","head":[["meta",{"property":"og:url","content":"https://lianyp.fun/lyp-blog/article/ai/ComfyUI_Controlnet.html"}],["meta",{"property":"og:site_name","content":"小道空间-Vuepress开源轻博客系统"}],["meta",{"property":"og:title","content":"AI绘画-在ComfyUI中如何使用Controlnet"}],["meta",{"property":"og:description","content":"什么是Controlnet 我们先想一下自己为什么要学习AI绘画，无非就是想要得到符合我们需要的图像。那么如何通过AI得到我们脑海中期待的画面呢？ 这时候就要了解Controlnet，中文名我们通常称为 “控制网络” ，通过它我们可以得到一些控制更为精准的图像。 提示词是以文字的方式去告诉AI我要什么东西，而Lora则是在原有流程上进行了一定微调，具体..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://lianyp.fun/picture/open-admin-pro/picture/article/image/84e41875-bedd-4446-af8e-c05ee2e3b8fd.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-20T09:04:18.000Z"}],["meta",{"property":"article:author","content":"梁小道"}],["meta",{"property":"article:tag","content":"ComfyUI"}],["meta",{"property":"article:tag","content":"Controlnet"}],["meta",{"property":"article:published_time","content":"2024-05-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-20T09:04:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AI绘画-在ComfyUI中如何使用Controlnet\\",\\"image\\":[\\"https://lianyp.fun/picture/open-admin-pro/picture/article/image/84e41875-bedd-4446-af8e-c05ee2e3b8fd.png\\",\\"https://lianyp.fun/picture/open-admin-pro/picture/article/image/3173eca1-8d6a-41ad-a848-87d2b7daaaf6.png\\",\\"https://lianyp.fun/picture/open-admin-pro/picture/article/image/9aa72787-9375-460c-88c1-94049190494a.png\\",\\"https://lianyp.fun/picture/open-admin-pro/picture/article/image/b845164b-4d88-4c79-b8c4-07ef4a983523.png\\"],\\"datePublished\\":\\"2024-05-03T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-20T09:04:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"梁小道\\",\\"url\\":\\"https://lianyp.fun\\"}]}"]]},"headers":[{"level":2,"title":"什么是Controlnet","slug":"什么是controlnet","link":"#什么是controlnet","children":[]},{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"插件下载","slug":"插件下载","link":"#插件下载","children":[]},{"level":2,"title":"模型下载","slug":"模型下载","link":"#模型下载","children":[]},{"level":2,"title":"节点介绍","slug":"节点介绍","link":"#节点介绍","children":[{"level":3,"title":"预处理器","slug":"预处理器","link":"#预处理器","children":[]},{"level":3,"title":"加载controlnet模型","slug":"加载controlnet模型","link":"#加载controlnet模型","children":[]},{"level":3,"title":"应用Controlnet模型","slug":"应用controlnet模型","link":"#应用controlnet模型","children":[]}]},{"level":2,"title":"操作流程","slug":"操作流程","link":"#操作流程","children":[]},{"level":2,"title":"Controlnet分类","slug":"controlnet分类","link":"#controlnet分类","children":[{"level":3,"title":"控制姿势","slug":"控制姿势","link":"#控制姿势","children":[]},{"level":3,"title":"艺术线条","slug":"艺术线条","link":"#艺术线条","children":[]},{"level":3,"title":"空间深度","slug":"空间深度","link":"#空间深度","children":[]},{"level":3,"title":"物品种类","slug":"物品种类","link":"#物品种类","children":[]},{"level":3,"title":"风格约束","slug":"风格约束","link":"#风格约束","children":[]},{"level":3,"title":"重绘","slug":"重绘","link":"#重绘","children":[]},{"level":3,"title":"添加细节-tile","slug":"添加细节-tile","link":"#添加细节-tile","children":[]}]},{"level":2,"title":"一些案例","slug":"一些案例","link":"#一些案例","children":[]},{"level":2,"title":"Line里面的Canny","slug":"line里面的canny","link":"#line里面的canny","children":[]}],"git":{"createdTime":1716002958000,"updatedTime":1716195858000,"contributors":[{"name":"liangyp","email":"2267841523@qq.com","commits":2}]},"readingTime":{"minutes":5.24,"words":1571},"filePathRelative":"article/ai/ComfyUI_Controlnet.md","localizedDate":"2024年5月3日","excerpt":"<h2>什么是Controlnet</h2>\\n<p>我们先想一下自己为什么要学习AI绘画，无非就是想要得到符合我们需要的图像。那么如何通过AI得到我们脑海中期待的画面呢？ 这时候就要了解Controlnet，中文名我们通常称为 “控制网络” ，通过它我们可以得到一些控制更为精准的图像。</p>\\n<blockquote>\\n<p>提示词是以文字的方式去告诉AI我要什么东西，而Lora则是在原有流程上进行了一定微调，具体调整方向以及力度由Lora模型和强度参数有关，本节要讲的Controlnet的作用则是更加精细化地控制输出，至于具体的作用跟选择的预处理器有关，预处理器也是与前面两者（提示词/Lora）的最大区别所在，由一定的学习成本。</p>\\n</blockquote>","autoDesc":true}');export{d as comp,u as data};
